Dataset file_name: ./datasets/custom_11_d.txt
numCities: 11
Number of processors available = 24
Number of threads =              13
printAdjacencyMatrix: printing Matrix
	 0.00	 29.00	 20.00	 21.00	 16.00	 31.00	 100.00	 12.00	 4.00	 31.00	 18.00
	 29.00	 0.00	 15.00	 29.00	 28.00	 40.00	 72.00	 21.00	 29.00	 41.00	 12.00
	 20.00	 15.00	 0.00	 15.00	 14.00	 25.00	 81.00	 9.00	 23.00	 27.00	 13.00
	 21.00	 29.00	 15.00	 0.00	 4.00	 12.00	 92.00	 12.00	 25.00	 13.00	 25.00
	 16.00	 28.00	 14.00	 4.00	 0.00	 16.00	 94.00	 9.00	 20.00	 16.00	 22.00
	 31.00	 40.00	 25.00	 12.00	 16.00	 0.00	 95.00	 24.00	 36.00	 3.00	 37.00
	 100.00	 72.00	 81.00	 92.00	 94.00	 95.00	 0.00	 90.00	 101.00	 99.00	 84.00
	 12.00	 21.00	 9.00	 12.00	 9.00	 24.00	 90.00	 0.00	 15.00	 25.00	 13.00
	 4.00	 29.00	 23.00	 25.00	 20.00	 36.00	 101.00	 15.00	 0.00	 35.00	 18.00
	 31.00	 41.00	 27.00	 13.00	 16.00	 3.00	 99.00	 25.00	 35.00	 0.00	 38.00
	 18.00	 12.00	 13.00	 25.00	 22.00	 37.00	 84.00	 13.00	 18.00	 38.00	 0.00

totalNumThreads:13, numStartingThreads:10, numInitialPaths:10, pathsPerThread:1
printPath: Printing path =>
 0(0.00) -> 1(29.00) -> 9(70.00) -> 2(97.00) -> 4(111.00) -> 5(127.00) -> 6(222.00) -> 3(314.00) -> 7(326.00) -> 10(339.00) -> 8(357.00) -> 0(361.00)
printPath: Done
printPath: Printing path =>
 0(0.00) -> 1(29.00) -> 9(70.00) -> 5(73.00) -> 7(97.00) -> 2(106.00) -> 6(187.00) -> 3(279.00) -> 8(304.00) -> 10(322.00) -> 4(344.00) -> 0(360.00)
printPath: Done
printPath: Printing path =>
 0(0.00) -> 1(29.00) -> 9(70.00) -> 5(73.00) -> 7(97.00) -> 2(106.00) -> 6(187.00) -> 3(279.00) -> 4(283.00) -> 8(303.00) -> 10(321.00) -> 0(339.00)
printPath: Done
printPath: Printing path =>
 0(0.00) -> 1(29.00) -> 9(70.00) -> 5(73.00) -> 7(97.00) -> 2(106.00) -> 6(187.00) -> 3(279.00) -> 4(283.00) -> 10(305.00) -> 8(323.00) -> 0(327.00)
printPath: Done
printPath: Printing path =>
 0(0.00) -> 1(29.00) -> 9(70.00) -> 5(73.00) -> 7(97.00) -> 2(106.00) -> 4(120.00) -> 3(124.00) -> 6(216.00) -> 10(300.00) -> 8(318.00) -> 0(322.00)
printPath: Done
printPath: Printing path =>
 0(0.00) -> 1(29.00) -> 9(70.00) -> 5(73.00) -> 2(98.00) -> 7(107.00) -> 4(116.00) -> 3(120.00) -> 6(212.00) -> 10(296.00) -> 8(314.00) -> 0(318.00)
printPath: Done
printPath: Printing path =>
 0(0.00) -> 1(29.00) -> 9(70.00) -> 5(73.00) -> 2(98.00) -> 6(179.00) -> 10(263.00) -> 7(276.00) -> 3(288.00) -> 4(292.00) -> 8(312.00) -> 0(316.00)
printPath: Done
printPath: Printing path =>
 0(0.00) -> 1(29.00) -> 9(70.00) -> 5(73.00) -> 7(97.00) -> 3(109.00) -> 4(113.00) -> 2(127.00) -> 6(208.00) -> 10(292.00) -> 8(310.00) -> 0(314.00)
printPath: Done
printPath: Printing path =>
 0(0.00) -> 1(29.00) -> 9(70.00) -> 5(73.00) -> 4(89.00) -> 3(93.00) -> 2(108.00) -> 6(189.00) -> 10(273.00) -> 7(286.00) -> 8(301.00) -> 0(305.00)
printPath: Done
printPath: Printing path =>
 0(0.00) -> 1(29.00) -> 9(70.00) -> 5(73.00) -> 4(89.00) -> 3(93.00) -> 7(105.00) -> 2(114.00) -> 6(195.00) -> 10(279.00) -> 8(297.00) -> 0(301.00)
printPath: Done
printPath: Printing path =>
 0(0.00) -> 1(29.00) -> 7(50.00) -> 5(74.00) -> 9(77.00) -> 3(90.00) -> 4(94.00) -> 2(108.00) -> 6(189.00) -> 10(273.00) -> 8(291.00) -> 0(295.00)
printPath: Done
printPath: Printing path =>
 0(0.00) -> 1(29.00) -> 9(70.00) -> 5(73.00) -> 3(85.00) -> 4(89.00) -> 7(98.00) -> 2(107.00) -> 6(188.00) -> 10(272.00) -> 8(290.00) -> 0(294.00)
printPath: Done
printPath: Printing path =>
 0(0.00) -> 2(20.00) -> 4(34.00) -> 1(62.00) -> 6(134.00) -> 5(229.00) -> 9(232.00) -> 3(245.00) -> 7(257.00) -> 10(270.00) -> 8(288.00) -> 0(292.00)
printPath: Done
printPath: Printing path =>
 0(0.00) -> 2(20.00) -> 4(34.00) -> 3(38.00) -> 5(50.00) -> 9(53.00) -> 7(78.00) -> 1(99.00) -> 6(171.00) -> 10(255.00) -> 8(273.00) -> 0(277.00)
printPath: Done
printPath: Printing path =>
 0(0.00) -> 2(20.00) -> 4(34.00) -> 3(38.00) -> 5(50.00) -> 9(53.00) -> 7(78.00) -> 6(168.00) -> 1(240.00) -> 10(252.00) -> 8(270.00) -> 0(274.00)
printPath: Done
printPath: Printing path =>
 0(0.00) -> 2(20.00) -> 4(34.00) -> 3(38.00) -> 5(50.00) -> 9(53.00) -> 6(152.00) -> 1(224.00) -> 10(236.00) -> 7(249.00) -> 8(264.00) -> 0(268.00)
printPath: Done
printPath: Printing path =>
 0(0.00) -> 2(20.00) -> 4(34.00) -> 3(38.00) -> 9(51.00) -> 5(54.00) -> 6(149.00) -> 1(221.00) -> 10(233.00) -> 7(246.00) -> 8(261.00) -> 0(265.00)
printPath: Done
printPath: Printing path =>
 0(0.00) -> 2(20.00) -> 7(29.00) -> 4(38.00) -> 3(42.00) -> 9(55.00) -> 5(58.00) -> 6(153.00) -> 1(225.00) -> 10(237.00) -> 8(255.00) -> 0(259.00)
printPath: Done
printPath: Printing path =>
 0(0.00) -> 3(21.00) -> 5(33.00) -> 9(36.00) -> 4(52.00) -> 7(61.00) -> 2(70.00) -> 6(151.00) -> 1(223.00) -> 10(235.00) -> 8(253.00) -> 0(257.00)
printPath: Done
printPath: Printing path =>
 0(0.00) -> 4(16.00) -> 9(32.00) -> 5(35.00) -> 3(47.00) -> 7(59.00) -> 2(68.00) -> 6(149.00) -> 1(221.00) -> 10(233.00) -> 8(251.00) -> 0(255.00)
printPath: Done
printPath: Printing path =>
 0(0.00) -> 7(12.00) -> 4(21.00) -> 3(25.00) -> 9(38.00) -> 5(41.00) -> 2(66.00) -> 6(147.00) -> 1(219.00) -> 10(231.00) -> 8(249.00) -> 0(253.00)
printPath: Done



=====================================
Lowest Cost:253.00
Wallclock time = 5.830874

Took 58.1700000000 seconds to execute
