taskID:0, Dataset file_name: ./datasets/custom_11_d.txt
taskID:0, numCities: 11
taskID:0, Number of processors available = 24
taskID:0, Number of threads =              2
printAdjacencyMatrix: printing Matrix
	 0.00	 29.00	 20.00	 21.00	 16.00	 31.00	 100.00	 12.00	 4.00	 31.00	 18.00
	 29.00	 0.00	 15.00	 29.00	 28.00	 40.00	 72.00	 21.00	 29.00	 41.00	 12.00
	 20.00	 15.00	 0.00	 15.00	 14.00	 25.00	 81.00	 9.00	 23.00	 27.00	 13.00
	 21.00	 29.00	 15.00	 0.00	 4.00	 12.00	 92.00	 12.00	 25.00	 13.00	 25.00
	 16.00	 28.00	 14.00	 4.00	 0.00	 16.00	 94.00	 9.00	 20.00	 16.00	 22.00
	 31.00	 40.00	 25.00	 12.00	 16.00	 0.00	 95.00	 24.00	 36.00	 3.00	 37.00
	 100.00	 72.00	 81.00	 92.00	 94.00	 95.00	 0.00	 90.00	 101.00	 99.00	 84.00
	 12.00	 21.00	 9.00	 12.00	 9.00	 24.00	 90.00	 0.00	 15.00	 25.00	 13.00
	 4.00	 29.00	 23.00	 25.00	 20.00	 36.00	 101.00	 15.00	 0.00	 35.00	 18.00
	 31.00	 41.00	 27.00	 13.00	 16.00	 3.00	 99.00	 25.00	 35.00	 0.00	 38.00
	 18.00	 12.00	 13.00	 25.00	 22.00	 37.00	 84.00	 13.00	 18.00	 38.00	 0.00

taskID:0, totalNumThreads:2, numStartingThreads:1, numInitialPaths:1, pathsPerThread:1
get_my_share: Starting from threadID = 0
get_my_share: threadID:numPathsAvailable = 0:1
get_my_share: threadID:pathsPerThread = 0:1
get_my_share: threadID:pathsAllocated = 0:1
get_my_share: Ending from threadID = 0
printPath: Printing path =>
 0(0.00) -> 10(18.00) -> 1(30.00) -> 2(45.00) -> 3(60.00) -> 4(64.00) -> 5(80.00) -> 6(175.00) -> 7(265.00) -> 8(280.00) -> 9(315.00) -> 0(346.00)
printPath: Done
printPath: Printing path =>
 0(0.00) -> 10(18.00) -> 1(30.00) -> 2(45.00) -> 3(60.00) -> 4(64.00) -> 5(80.00) -> 6(175.00) -> 7(265.00) -> 9(290.00) -> 8(325.00) -> 0(329.00)
printPath: Done
printPath: Printing path =>
 0(0.00) -> 10(18.00) -> 1(30.00) -> 2(45.00) -> 3(60.00) -> 4(64.00) -> 5(80.00) -> 6(175.00) -> 9(274.00) -> 7(299.00) -> 8(314.00) -> 0(318.00)
printPath: Done
printPath: Printing path =>
 0(0.00) -> 10(18.00) -> 1(30.00) -> 2(45.00) -> 3(60.00) -> 4(64.00) -> 5(80.00) -> 9(83.00) -> 6(182.00) -> 7(272.00) -> 8(287.00) -> 0(291.00)
printPath: Done
printPath: Printing path =>
 0(0.00) -> 10(18.00) -> 1(30.00) -> 2(45.00) -> 3(60.00) -> 4(64.00) -> 9(80.00) -> 5(83.00) -> 6(178.00) -> 7(268.00) -> 8(283.00) -> 0(287.00)
printPath: Done
printPath: Printing path =>
 0(0.00) -> 10(18.00) -> 1(30.00) -> 2(45.00) -> 4(59.00) -> 3(63.00) -> 5(75.00) -> 9(78.00) -> 6(177.00) -> 7(267.00) -> 8(282.00) -> 0(286.00)
printPath: Done
printPath: Printing path =>
 0(0.00) -> 10(18.00) -> 1(30.00) -> 2(45.00) -> 4(59.00) -> 3(63.00) -> 9(76.00) -> 5(79.00) -> 6(174.00) -> 7(264.00) -> 8(279.00) -> 0(283.00)
printPath: Done
printPath: Printing path =>
 0(0.00) -> 10(18.00) -> 1(30.00) -> 2(45.00) -> 6(126.00) -> 3(218.00) -> 5(230.00) -> 9(233.00) -> 4(249.00) -> 7(258.00) -> 8(273.00) -> 0(277.00)
printPath: Done
printPath: Printing path =>
 0(0.00) -> 10(18.00) -> 1(30.00) -> 2(45.00) -> 6(126.00) -> 5(221.00) -> 9(224.00) -> 3(237.00) -> 4(241.00) -> 7(250.00) -> 8(265.00) -> 0(269.00)
printPath: Done
printPath: Printing path =>
 0(0.00) -> 10(18.00) -> 1(30.00) -> 6(102.00) -> 2(183.00) -> 3(198.00) -> 4(202.00) -> 5(218.00) -> 9(221.00) -> 7(246.00) -> 8(261.00) -> 0(265.00)
printPath: Done
printPath: Printing path =>
 0(0.00) -> 10(18.00) -> 1(30.00) -> 6(102.00) -> 2(183.00) -> 3(198.00) -> 4(202.00) -> 9(218.00) -> 5(221.00) -> 7(245.00) -> 8(260.00) -> 0(264.00)
printPath: Done
printPath: Printing path =>
 0(0.00) -> 10(18.00) -> 1(30.00) -> 6(102.00) -> 2(183.00) -> 3(198.00) -> 5(210.00) -> 9(213.00) -> 4(229.00) -> 7(238.00) -> 8(253.00) -> 0(257.00)
printPath: Done
printPath: Printing path =>
 0(0.00) -> 10(18.00) -> 1(30.00) -> 6(102.00) -> 2(183.00) -> 5(208.00) -> 9(211.00) -> 3(224.00) -> 4(228.00) -> 7(237.00) -> 8(252.00) -> 0(256.00)
printPath: Done
taskID:0, Evaluated a total of 8849 feasible complete paths.



=====================================
Lowest Cost:253.00
Wallclock time = 0.298095

Took 0.4300000000 seconds to execute
